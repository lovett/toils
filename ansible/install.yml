---
- hosts: toils
  vars:
    application_name: toils
    application_root: /var/www
    application_user: apache
    application_group: apache
    apache_vhost_path: "/etc/httpd/conf.d/{{ application_name }}.conf"

  tasks:
    - name: Install system packages
      become: true
      dnf:
        name:
          - php-bcmath
          - php-fpm
          - php-intl
          - php-mbstring
          - php-xml
          - sqlite
        state: latest

    - name: Install Apache Vhost
      become: true
      template:
        src: "templates/toils-vhost.j2"
        dest: "{{ apache_vhost_path }}"
      notify: Restart Apache

    - name: Create non-local application storage
      become: true
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ application_user }}"
        group: "{{ application_group }}"
      loop:
        - "/var/{{ application_name}}/app"
        - "/var/{{ application_name}}/fonts"
        - "/var/{{ application_name}}/framework/views"
        - "/var/{{ application_name}}/logs"

    - name: Create application database
      become: true
      file:
        path: "/var/{{ application_name }}/{{application_name }}.sqlite"
        state: touch
        owner: "{{ application_user }}"
        group: "{{ application_group }}"

    - name: Delete previous installation
      become: yes
      file:
        path: "{{ application_root }}/{{ application_name }}"
        state: absent

    - name: Transfer and extract application
      become: yes
      unarchive:
        src: "../{{ application_name }}.tar.gz"
        dest: "{{ application_root }}"
        owner: "{{ application_user }}"
        group: "{{ application_group }}"

    - name: Symlink non-local storage
      become: true
      file:
        src: "/var/{{ application_name }}"
        dest: "{{ application_root }}/{{ application_name }}/storage"
        state: link
        owner: "{{ application_user }}"
        group: "{{ application_group }}"

    - name: Run database migrations
      command: "php artisan migrate --force"
      become: yes
      args:
        chdir: "{{ application_root }}/{{ application_name }}"

    - name: Optimize application
      command: "{{ item }}"
      become: yes
      args:
        chdir: "{{ application_root }}/{{ application_name }}"
      loop:
        - "php artisan config:cache"
        - "php artisan route:cache"
        - "php artisan view:cache"
      environment:
        APP_KEY: "{{ toils_app_key }}"
        MAIL_FROM_ADDRESS: "{{ toils_mail_from_address }}"
        APP_URL: "https://{{ toils_hostname }}"

    - name: Install systemd maintenance service
      become: yes
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - { src: "templates/toils-maintenance-service.j2", dest: "/etc/systemd/system/toils-maintenance.service" }
        - { src: "templates/toils-maintenance-timer.j2", dest: "/etc/systemd/system/toils-maintenance.timer" }

      notify: Reload Systemd

    - name: Enable systemd maintenance timer
      become: yes
      systemd:
        name: "toils-maintenance.timer"
        state: started
        enabled: yes

  handlers:
    - name: Restart Apache
      become: yes
      systemd:
        name: httpd.service
        state: restarted
    - name: Reload Systemd
      become: yes
      systemd:
        daemon_reload: yes
